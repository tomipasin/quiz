{"ast":null,"code":"var _jsxFileName = \"/home/tomipasin/Documentos/Rota/UNIV/quiz-app/final/src/Quiz.js\";\n//vou usar o hook de usestate para armazenar os resultados equanto o aluno for respondendo. \nimport React, { useState } from 'react'; //Renan, criei uma função default aqui pra tu ver como usa ela depois, incluindo como \n//um módulo, talvez... \n\nexport default function Quiz() {\n  //aqui as questões em formato de objeto JS. Coloca quantas quiser.\n  //vou usar inglês por padronização.\n  const questions = [{\n    questionText: 'Qual é a capital do RS???',\n    answerOptions: [{\n      answerText: 'João Pessoa',\n      isCorrect: false\n    }, {\n      answerText: 'Porto Alegre',\n      isCorrect: true\n    }, {\n      answerText: 'Barbacena',\n      isCorrect: false\n    }, {\n      answerText: 'Belo Horizonte',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Quem é o melhor programador???',\n    answerOptions: [{\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tomi Pasin',\n      isCorrect: true\n    }, {\n      answerText: 'Mark Zuckenberg',\n      isCorrect: false\n    }, {\n      answerText: 'Steve Jobs',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Qual a empresa que está desenvolvendo uma universidade para seus colaboradores???',\n    answerOptions: [{\n      answerText: 'Unimed',\n      isCorrect: false\n    }, {\n      answerText: 'Rota Seguros',\n      isCorrect: true\n    }, {\n      answerText: 'Metlife',\n      isCorrect: false\n    }, {\n      answerText: 'Porto Seguro',\n      isCorrect: false\n    }]\n  }]; //aqui podemos usar o score para armazenar os dados de cada aluno no seu registro.\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0); //aqui é o seguinte: ao clicar em uma resposta o código verifica se a chave \n  //iscorrect daquela entrada é true. se for adiciona 1 ao score.\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n  }; //aqui vamos para apróxima questão até o limite de questões. \n\n\n  const nextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      //se for a última executa a função de mostrar score. \n      setShowScore(true);\n    }\n  }; //tudo isso retornará o seguinte:\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, \"Tu acertou \", score, \" de \", questions.length, \" quest\\xF5es\", showScore)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }, \"Pergunta \", currentQuestion + 1), \" de \", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section coi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n    className: answerOption.isCorrect ? 'correct' : 'incorrect',\n    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, answerOption.answerText)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => nextQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, \"pr\\xF3xima pergunta\")))));\n}","map":{"version":3,"sources":["/home/tomipasin/Documentos/Rota/UNIV/quiz-app/final/src/Quiz.js"],"names":["React","useState","Quiz","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["//vou usar o hook de usestate para armazenar os resultados equanto o aluno for respondendo. \nimport React, { useState } from 'react';\n\n//Renan, criei uma função default aqui pra tu ver como usa ela depois, incluindo como \n//um módulo, talvez... \nexport default function Quiz() {\n\t//aqui as questões em formato de objeto JS. Coloca quantas quiser.\n\t//vou usar inglês por padronização.\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'Qual é a capital do RS???',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'João Pessoa', isCorrect: false },\n\t\t\t\t{ answerText: 'Porto Alegre', isCorrect: true },\n\t\t\t\t{ answerText: 'Barbacena', isCorrect: false },\n\t\t\t\t{ answerText: 'Belo Horizonte', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Quem é o melhor programador???',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tomi Pasin', isCorrect: true },\n\t\t\t\t{ answerText: 'Mark Zuckenberg', isCorrect: false },\n\t\t\t\t{ answerText: 'Steve Jobs', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual a empresa que está desenvolvendo uma universidade para seus colaboradores???',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Unimed', isCorrect: false },\n\t\t\t\t{ answerText: 'Rota Seguros', isCorrect: true },\n\t\t\t\t{ answerText: 'Metlife', isCorrect: false },\n\t\t\t\t{ answerText: 'Porto Seguro', isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n\n\t//aqui podemos usar o score para armazenar os dados de cada aluno no seu registro.\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\t//aqui é o seguinte: ao clicar em uma resposta o código verifica se a chave \n\t//iscorrect daquela entrada é true. se for adiciona 1 ao score.\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\n\n\t}\n\t\n\t//aqui vamos para apróxima questão até o limite de questões. \n\tconst nextQuestion = () => {\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\t//se for a última executa a função de mostrar score. \n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n\t//tudo isso retornará o seguinte:\n\treturn (\n\t\t<div className='quiz'>\n\t\t\t{/* usando ternário fazemos o seguinte: se showscore for true mostra a div \n\t\t\tde score-section ou então mostra a próxima pergunta. */}\n\t\t\t{showScore ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className='score-section'>\n\t\t\t\t\t\tTu acertou {score} de {questions.length} questões\n\t\t\t\t\t{showScore}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Pergunta {currentQuestion + 1}</span> de {questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section coi'>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t\t<button className={\n\t\t\t\t\t\t\t\t\tanswerOption.isCorrect ? 'correct' : 'incorrect'\n\t\t\t\t\t\t\t\t} onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>\n\t\t\t\t\t\t\t\t\t{answerOption.answerText}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<button onClick={() => nextQuestion()}>próxima pergunta</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}